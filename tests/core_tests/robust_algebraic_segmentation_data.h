// Copyright 2016 Alexey Rozhkov

#ifndef TESTS_CORE_TESTS_ROBUST_ALGEBRAIC_SEGMENTATION_DATA_H_
#define TESTS_CORE_TESTS_ROBUST_ALGEBRAIC_SEGMENTATION_DATA_H_

#include <core/utils/ras_types.h>
#include <vector>


// Matlab-friendly notation for testing

/*
  img1 = [
    0.816045, 0.102159, 0.965311, 0.285946, 0.513327, 0.364852, 0.288980, 0.749286, 0.081422, 0.155492, 0.058976, 0.060022, 0.876894, 0.639486, 0.275948, 0.544876, 0.838859, 0.730281, 0.824259, 0.808983;
0.526701, 0.025570, 0.556202, 0.048673, 0.424754, 0.581813, 0.182254, 0.966267, 0.821407, 0.018588, 0.285543, 0.514578, 0.713952, 0.350223, 0.597102, 0.659934, 0.173327, 0.748276, 0.271621, 0.583222
]

  img2 = [
    0.103279, 0.491115, 0.443872, 0.361588, 0.930086, 0.266166, 0.333336, 0.655125, 0.789836, 0.116365, 0.350484, 0.726794, 0.838292, 0.049206, 0.681464, 0.758840, 0.125729, 0.318943, 0.724221, 0.055802;
0.719991, 0.377211, 0.188255, 0.329897, 0.811218, 0.572943, 0.898870, 0.756126, 0.835786, 0.067549, 0.486964, 0.092175, 0.325504, 0.269181, 0.690665, 0.568241, 0.735954, 0.187444, 0.428748, 0.798329
]
*/

std::vector<EmbValT> img1 {
  0.816045, 0.102159, 0.965311, 0.285946, 0.513327, 0.364852, 0.288980,
  0.749286, 0.081422, 0.155492, 0.058976, 0.060022, 0.876894, 0.639486,
  0.275948, 0.544876, 0.838859, 0.730281, 0.824259, 0.808983,

  0.526701, 0.025570, 0.556202, 0.048673, 0.424754, 0.581813, 0.182254,
  0.966267, 0.821407, 0.018588, 0.285543, 0.514578, 0.713952, 0.350223,
  0.597102, 0.659934, 0.173327, 0.748276, 0.271621, 0.583222
};

std::vector<EmbValT> img2 {
  0.103279, 0.491115, 0.443872, 0.361588, 0.930086, 0.266166, 0.333336,
  0.655125, 0.789836, 0.116365, 0.350484, 0.726794, 0.838292, 0.049206,
  0.681464, 0.758840, 0.125729, 0.318943, 0.724221, 0.055802,

  0.719991, 0.377211, 0.188255, 0.329897, 0.811218, 0.572943, 0.898870,
  0.756126, 0.835786, 0.067549, 0.486964, 0.092175, 0.325504, 0.269181,
  0.690665, 0.568241, 0.735954, 0.187444, 0.428748, 0.798329
};

// 0s instead of -1s to make the conversion to c indexing simpler (just -1)
std::vector<IndValT> labels {
  2, 2, 1, 2, 1, 2, 1, 1, 0, 2, 2, 2, 1, 1, 2, 1, 0, 1, 0, 2
};

std::vector<IndValT> labelsAll {
  2, 2, 1, 2, 1, 2, 1, 1, 0, 2, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2
};

std::vector<IndValT> motionModels {
  1, 1
};

std::vector<EmbValT> quadratics[2] = {
  {0.00000, 0.00000, 0.20862, -0.27650, -0.51801,
   0.00000, 0.00000, -0.09266, 0.16943, -0.04929,
   0.20862, -0.09266, 0.00000, 0.00000, 0.01359,
   -0.27650, 0.16943, 0.00000, 0.00000, -0.16371,
   -0.51801, -0.04929, 0.01359, -0.16371, 0.29994},

  {0.00000, 0.00000, -0.34674, -0.29755, -0.21652,
   0.00000, 0.00000, -0.02761, -0.04878, -0.04041,
  -0.34674, -0.02761, 0.00000, 0.00000, -0.31871,
  -0.29755, -0.04878, 0.00000, 0.00000, -0.22411,
  -0.21652, -0.04041, -0.31871, -0.22411, -0.41899}
};

#endif  // TESTS_CORE_TESTS_ROBUST_ALGEBRAIC_SEGMENTATION_DATA_H_
