#include <iostream>
#include <perspective_embedding.h>
#include <find_polynomials.h>

using namespace std;

// Matlab-friendly notation for testing

/*
matchesData = [0.171259, 0.883348, 0.391860, 0.310852, 0.388904;
               0.189482, 0.626488, 0.196547, 0.239740, 0.080378;
               0.774984, 0.288808, 0.774824, 0.844884, 0.807128;
               0.507466, 0.748737, 0.701910, 0.195603, 0.096529;
               1.000000, 1.000000, 1.000000, 1.000000, 1.000000]

matchesData = [0.027714, 0.137099, 0.513556, 0.812883, 0.793006, 0.843907;
               0.559018, 0.453697, 0.566884, 0.179252, 0.364366, 0.145998;
               0.586774, 0.742379, 0.069178, 0.191561, 0.250551, 0.395803;
               0.701314, 0.550547, 0.951634, 0.421414, 0.306993, 0.322419;
               1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000]

matchesData = [0.088945, 0.433042, 0.926859, 0.735854, 0.977486, 0.633038, 0.357806;
               0.726031, 0.856072, 0.281373, 0.997820, 0.998505, 0.784976, 0.293788;
               0.935457, 0.988242, 0.810612, 0.184758, 0.966597, 0.610093, 0.202951;
               0.327750, 0.290207, 0.043002, 0.994514, 0.450264, 0.730404, 0.934064;
               1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000]
*/

int main() {
  double matchesData[] = {0.088945, 0.433042, 0.926859, 0.735854, 0.977486, 0.633038, 0.357806,
                          0.726031, 0.856072, 0.281373, 0.997820, 0.998505, 0.784976, 0.293788,
                          0.935457, 0.988242, 0.810612, 0.184758, 0.966597, 0.610093, 0.202951,
                          0.327750, 0.290207, 0.043002, 0.994514, 0.450264, 0.730404, 0.934064,
                          1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000, 1.000000};

  auto e = perspective_embedding(Mat2D(5, 7, matchesData), 3);
  auto p = find_polynomials(e.getV().back(), e.getD().back(), FISHER, 1);
  std::cout << p << std::endl;

  return 0;
}

